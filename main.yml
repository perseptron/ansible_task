---
- hosts: db
  vars:
    db_host: db
    db_name: database
    db_user: user
    db_pass: 12345

  become: yes
  tasks:
  - name: "Install from repo"
    apt:
      update_cache: yes
      pkg:
      - mariadb-server
      - python3-pymysql

#    notify:
#      - Start mariadb
  - name: "Start mariadb service"
    shell: service mariadb start
#    systemd:
#      name: mariadb
#      state: started
#      enabled: yes

  - name: "Add user"
    mysql_user:
      name: "{{ db_user }}"
      password: "{{ db_pass }}"
      priv: '*.*:ALL'
      state: present
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - name: "Add database"
    mysql_db:
      name: "{{ db_name }}"
      state: present
      login_user: "{{ db_user }}"
      login_password: "{{ db_pass }}"
    register: db_ready

#  handlers:
#   - name: Start mariadb
#     service:
#       name: mariadb
#       state: started

- hosts: server
  become: yes
  tasks:

  - name: Add php repository
    ansible.builtin.apt_repository:
      repo: ppa:ondrej/php

  - name: "Installing packages"
    apt:
      update_cache: yes
      pkg:
      -  mc
      -  gpg
      -  git
      -  php8.1
      -  libapache2-mod-php
      -  php-xml
      -  php-mysql
      -  php-curl
      -  apache2

  - name: "Add nodejs apt key"
    apt_key:
      url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key

  - name: "Add nodejs 18.x ppa for apt repo"
    apt_repository:
      repo: deb https://deb.nodesource.com/node_18.x jammy main
      update_cache: yes

  - name: "Install nodejs"
    apt:
      update_cache: yes
      name: nodejs
      state: present

  - name: "Check app exists"
    stat:
      path: /var/www/app
    register: app

  - name: "Remove old app"
    when: app.stat.exists
    file:
      path: /var/www/app
      state: absent

  - name: "Get app"
    git:
      repo: https://github.com/Practical-DevOps/app-for-devops.git
      dest: /var/www/app

  - name: "Change ownership"
    file:
      dest: /var/www/app
      owner: root
      group: www-data
      mode: 0777
      recurse: yes

  - name: "Change apache config"
    copy:
      src: apache2.conf
      dest: /etc/apache2/apache2.conf
      owner: root
      group: root
      mode: '0644'

  - name: "Add site"
    copy:
      src: app.conf
      dest: /etc/apache2/sites-available/app.conf
      owner: root
      group: root
      mode: '0644'

  - name: "rename env"
    command: mv /var/www/app/.env.example /var/www/app/.env

  - name: "edit env"
    replace:
      path: /var/www/app/.env
      regexp: 'DB_USERNAME=root'
      replace: 'DB_USERNAME={{ db_user }}'

  - name: "edit env2"
    replace:
      path: /var/www/app/.env
      regexp: 'DB_PASSWORD='
      replace: 'DB_PASSWORD={{ db_pass }}'

  - name: "edit env3"
    replace:
      path: /var/www/app/.env
      regexp: 'DB_HOST=127.0.0.1'
      replace: 'DB_HOST={{ db_host }}'

  - name: "edit env4"
    replace:
      path: /var/www/app/.env
      regexp: 'DB_DATABASE=laravel'
      replace: 'DB_DATABASE={{ db_name }}'

  - name: "Download composer"
    ansible.builtin.get_url:
      url: https://getcomposer.org/download/latest-stable/composer.phar
      dest: /usr/local/bin/composer
      mode: '777'

  - name: "Install app dependency"
    become: no
    composer:
      command: update
      working_dir: /var/www/app

  - name: "Set app key"
    shell: php /var/www/app/artisan key:generate

  - name: "npm istall"
    npm:
      path: /var/www/app

  - name: "npm run"
    command: npm run build
    args:
      chdir: /var/www/app

  - name: "Migrate database"
    environment:
      DB_HOST: "{{ db_host }}"
      DB_USERNAME: "{{ db_user }}"
      DB_PASSWORD: "{{ db_pass }}"
    shell: yes | php /var/www/app/artisan migrate

  - name: "Activate mod_rewrite"
    shell: a2enmod rewrite

  - name: "Disabel def site"
    shell: a2dissite 000-default.conf

  - name: "Set default site"
    shell: a2ensite app.conf

  - name: "Start Apache"
    shell: service apache2 restart
#    service:
#     name: apache2
#     state: started
